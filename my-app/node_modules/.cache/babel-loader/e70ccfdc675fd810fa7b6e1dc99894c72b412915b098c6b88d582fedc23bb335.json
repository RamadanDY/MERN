{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OWNER\\\\MERN2\\\\my-app\\\\src\\\\User\\\\Components\\\\UsersList.jsx\";\nimport React from 'react';\n/// we will use props here bacause we will get the users list from the parent compo that will later on recieve the data from the backend\n/// this is to display a list of users \n//// this Userslist compo will display the list of users we have and also whether a user has been found or not\nimport 'UsersList.css';\nimport UserItem from './Useritem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UsersList = props => {\n  //// the data we expect to get via props from the parent compo\n  //// items is the name for this prop\n  if (props.items.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No Users Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  }\n  ///// this displays the users from another compo\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: props.items.map(user => {\n      return (\n        /*#__PURE__*/\n        ////we can specify what we want every user should have inside this compo\n        ///// the id={user.id} forwards the id of the user on a separate prop to the useritem\n        /////lets pass the users inside the users page \n        _jsxDEV(UserItem, {\n          id: user.id,\n          image: user.image,\n          name: user.name,\n          placeContent: user.place\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      );\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_c = UsersList;\nexport default UsersList;\nvar _c;\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"names":["React","UserItem","jsxDEV","_jsxDEV","UsersList","props","items","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","id","image","name","placeContent","place","_c","$RefreshReg$"],"sources":["C:/Users/OWNER/MERN2/my-app/src/User/Components/UsersList.jsx"],"sourcesContent":["import React from 'react'\r\n/// we will use props here bacause we will get the users list from the parent compo that will later on recieve the data from the backend\r\n/// this is to display a list of users \r\n//// this Userslist compo will display the list of users we have and also whether a user has been found or not\r\nimport 'UsersList.css'\r\nimport UserItem from './Useritem'\r\n\r\n\r\n\r\nconst UsersList = (props) => {\r\n  \r\n    //// the data we expect to get via props from the parent compo\r\n    //// items is the name for this prop\r\n    if (props.items.length === 0) {\r\n        return (\r\n            <div className='center'>\r\n                <h2>No Users Found</h2>\r\n            </div>\r\n        )    \r\n    }\r\n    ///// this displays the users from another compo\r\n    return(\r\n        <ul>\r\n            {props.items.map(user => {\r\n                return(\r\n                    ////we can specify what we want every user should have inside this compo\r\n                    ///// the id={user.id} forwards the id of the user on a separate prop to the useritem\r\n                    /////lets pass the users inside the users page \r\n                    <UserItem key={user.id} id={user.id} image={user.image} name={user.name} placeContent={user.place} />\r\n                )\r\n            })}\r\n        </ul>\r\n    )\r\n  \r\n}\r\n\r\nexport default UsersList"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA;AACA;AACA,OAAO,eAAe;AACtB,OAAOC,QAAQ,MAAM,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIjC,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAEzB;EACA;EACA,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;IAC1B,oBACIJ,OAAA;MAAKK,SAAS,EAAC,QAAQ;MAAAC,QAAA,eACnBN,OAAA;QAAAM,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC;EAEd;EACA;EACA,oBACIV,OAAA;IAAAM,QAAA,EACKJ,KAAK,CAACC,KAAK,CAACQ,GAAG,CAACC,IAAI,IAAI;MACrB;QAAA;QACI;QACA;QACA;QACAZ,OAAA,CAACF,QAAQ;UAAee,EAAE,EAAED,IAAI,CAACC,EAAG;UAACC,KAAK,EAAEF,IAAI,CAACE,KAAM;UAACC,IAAI,EAAEH,IAAI,CAACG,IAAK;UAACC,YAAY,EAAEJ,IAAI,CAACK;QAAM,GAAnFL,IAAI,CAACC,EAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA8E;MAAC;IAE7G,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAGb,CAAC;AAAAQ,EAAA,GAzBKjB,SAAS;AA2Bf,eAAeA,SAAS;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}